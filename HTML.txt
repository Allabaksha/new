package com.example.Spring_html_Mysql.Controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import com.example.Spring_html_Mysql.Entity.User;
import com.example.Spring_html_Mysql.Repository.UserRepository;

@Controller
@RequestMapping("/")
public class UserController {
    @Autowired
    private UserRepository userRepository;

    @GetMapping
    public String index() {
        return "index";
    }

    @GetMapping("/user")
    public String getUser (@RequestParam Integer id, Model model) {
        User user = userRepository.findById(id).orElse(null);
        if (user != null) {
            model.addAttribute("firstname", user.getFirstname());
            model.addAttribute("lastname", user.getLastname());
            model.addAttribute("message", "User  found successfully!");
        } else {
            model.addAttribute("message", "User  not found!");
        }
        return "Welcome"; // Return to the welcome page to display user information
    }

    @PostMapping("/register")
    public String createUser (@ModelAttribute User user, Model model) {
        userRepository.save(user);
        model.addAttribute("id",user.getId());
        model.addAttribute("firstname", user.getFirstname());
        model.addAttribute("lastname", user.getLastname());
        model.addAttribute("message", "User  created successfully!");
        return "Welcome";
    }

    @PostMapping("/user/update")
    public String updateUser (@RequestParam Integer id, @ModelAttribute User user, Model model) {
        User existingUser  = userRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("User  not found"));
        existingUser .setFirstname(user.getFirstname());
        existingUser .setLastname(user.getLastname());
        userRepository.save(existingUser );
        model.addAttribute("firstname", existingUser .getFirstname());
        model.addAttribute("lastname", existingUser .getLastname());
        model.addAttribute("message", "User  updated successfully!");
        return "Welcome";
    }

    @PostMapping("/user/delete")
    public String deleteUser (@RequestParam Integer id, Model model) {
        if (userRepository.existsById(id)) {
            userRepository.deleteById(id);
            model.addAttribute("message", "User  deleted successfully!");
        } else {
            model.addAttribute("message", "User  not found with ID: " + id);
        }
        return "Welcome"; // Return to index after deletion
    }
}

package com.example.Spring_html_Mysql.Entity;

import jakarta.persistence.Entity;

import jakarta.persistence.Id;
import jakarta.persistence.Table;

@Entity
@Table(name = "user3")
public class User {
    @Id
    private Integer id; // Change from int to Integer
    private String firstname;
    private String lastname;

    public Integer getId() { // Change return type to Integer
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public User() {
    }

    public User(Integer id, String firstname, String lastname) { 
        super();
        this.id = id;
        this.firstname = firstname;
        this.lastname = lastname;
    }
}

package com.example.Spring_html_Mysql.Repository;

import org.springframework.data.jpa.repository.JpaRepository;

import com.example.Spring_html_Mysql.Entity.User;

public interface UserRepository extends JpaRepository<User, Integer> {
    User findByFirstname(String firstname);
}

<!DOCTYPE html>
<html>
<head>
    <title>User Management</title>
    <style>
        .button-group { margin: 10px 0; }
        .form-group { margin: 10px 0; }
        button { margin: 5px; padding: 8px 16px; }
    </style>
</head>
<body>
    <h1>User Management System</h1>

    <!-- Create User Form -->
    <div class="form-group">
        <h2>Add New User</h2>
        <form action="/register" method="post">
            <label>User ID:</label><br/>
            <input type="number" name="id" required/><br/> 
            <label>First Name:</label><br/>
            <input type="text" name="firstname" required/><br/>
            <label>Last Name:</label><br/>
            <input type="text" name="lastname" required/><br/>
            <button type="submit">Create User</button>
        </form>
    </div>

    <!-- Get User Form -->
    <div class="form-group">
        <h2>Find User</h2>
        <form action="/user" method="get">
            <label>User ID:</label><br/>
            <input type="number" name="id" required/><br/>
            <button type="submit">Find User</button>
        </form>
    </div>

    <!-- Update User Form -->
    <div class="form-group">
        <h2>Update User</h2>
        <form action="/user/update" method="post">
            <label>User ID:</label><br/>
            <input type="number" name="id" required/><br/>
            <label>First Name:</label><br/>
            <input type="text" name="firstname" required/><br/>
            <label>Last Name:</label><br/>
            <input type="text" name="lastname" required/><br/>
            <button type="submit">Update User</button>
        </form>
    </div>

    <!-- Delete User Form -->
    <div class="form-group">
        <h2>Delete User</h2>
        <form action="/user/delete" method="post">
            <label>User ID:</label><br/>
            <input type="number" name="id" required/><br/>
            <button type="submit">Delete User</button>
        </form>
    </div>
</body>
</html>

<!DOCTYPE html>
<html xmlns:th="https://www.thymeleaf.org">
<head>
    <title>Welcome Page</title>
</head>
<body>
    <h1>Welcome Page</h1>
    <h2>User Information</h2>
    <p th:if="${id}">ID: <span th:text="${id}"></span></p> 
    <p th:if="${firstname}">First Name: <span th:text="${firstname}"></span></p>
    <p th:if="${lastname}">Last Name: <span th:text="${lastname}"></span></p>
    
    <div th:if="${message}" th:text="${message}"></div>
    
    <a href="/">Back to User Management</a>
</body>
</html>

spring.application.name=Spring_html_Mysql1

spring.datasource.url=jdbc:mysql://localhost:3006/std
spring.datasource.username=root
spring.datasource.password=Allu7338378902
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=8082
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.thymeleaf.cache=false

spring.mvc.hiddenmethod.filter.enabled=true